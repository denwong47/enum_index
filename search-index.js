var searchIndex = JSON.parse('{\
"enum_index":{"doc":"This library provides a simple derive macro to map Enum …","t":[8,24,4,13,13,13,13,13,13,13,11,11,0,11,11,11,11,0,11,11,11,11,11,4,13,13,13,13,13,13,13,8,24,4,13,13,13,13,13,13,13,0,4,13,13,13,13,13,13,13],"n":["EnumIndex","EnumIndex","EnumIndexError","IndexNotALiteral","IndexNotFound","IndexNotGiven","NotAnEnum","ParamsMetaNotFound","SynParseError","Unknown","borrow","borrow_mut","errors","fmt","fmt","from","into","prelude","provide","to_string","try_from","try_into","type_id","EnumIndexError","IndexNotALiteral","IndexNotFound","IndexNotGiven","NotAnEnum","ParamsMetaNotFound","SynParseError","Unknown","EnumIndex","EnumIndex","EnumIndexError","IndexNotALiteral","IndexNotFound","IndexNotGiven","NotAnEnum","ParamsMetaNotFound","SynParseError","Unknown","errors","EnumIndexError","IndexNotALiteral","IndexNotFound","IndexNotGiven","NotAnEnum","ParamsMetaNotFound","SynParseError","Unknown"],"q":["enum_index","","","","","","","","","","","","","","","","","","","","","","","enum_index::errors","","","","","","","","enum_index::prelude","","","","","","","","","","","enum_index::prelude::errors","","","","","","",""],"d":["Marker Trait only.","A simple derive macro to map static indexs of a single, …","A enum of possible error types caused during <code>EnumIndex</code> …","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A enum of possible error types caused during <code>EnumIndex</code> …","","","","","","","","Marker Trait only.","A simple derive macro to map static indexs of a single, …","A enum of possible error types caused during <code>EnumIndex</code> …","","","","","","","","","A enum of possible error types caused during <code>EnumIndex</code> …","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[1,2],[[4,[3]]]],[[1,2],[[4,[3]]]],[[]],[[]],0,[5],[[],6],[[],4],[[],4],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"EnumIndexError"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Demand"],[3,"String"],[3,"TypeId"]]},\
"enum_index_macros":{"doc":"This is where <code>EnumIndex</code> is actually declared.","t":[24],"n":["EnumIndex"],"q":["enum_index_macros"],"d":["A simple derive macro to map static indexs of a single, …"],"i":[0],"f":[0],"p":[]},\
"enum_index_types":{"doc":"This crate contains traits and structs for export to …","t":[8,0,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11],"n":["EnumIndex","errors","EnumIndexError","IndexNotALiteral","IndexNotFound","IndexNotGiven","NotAnEnum","ParamsMetaNotFound","SynParseError","Unknown","borrow","borrow_mut","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id"],"q":["enum_index_types","","enum_index_types::errors","","","","","","","","","","","","","","","","","",""],"d":["Marker Trait only.","","A enum of possible error types caused during <code>EnumIndex</code> …","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[1,2],3],[[1,2],3],[[]],[[]],[4],[[],5],[[],6],[[],6],[[],7]],"p":[[4,"EnumIndexError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
